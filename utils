export class C2Services {
  private accessToken: string = "";
  private apiContext!: APIRequestContext;  // Use "!" to tell TypeScript it will be initialized later
  private loginPromise: Promise<void>;

  constructor(username: string, password: string) {
    this.loginPromise = this.initialize(username, password);
  }

  private async initialize(username: string, password: string) {
    this.apiContext = await this.createApiContext();
    await this.login(username, password);
  }

  private async createApiContext(additionalHeaders: object = {}): Promise<APIRequestContext> {
    let headers = {};
    if (this.accessToken || Object.keys(additionalHeaders).length > 0) {
      headers = {
        Cookie: this.accessToken,
        "Content-Type": "application/json",
        ...additionalHeaders,
      };
    }
    return request.newContext({
      ignoreHTTPSErrors: true,
      ...(headers ? { extraHTTPHeaders: headers } : {}),
    });
  }

  private async login(username: string, password: string): Promise<void> {
    const response = await this.apiContext.post(`${baseURL_C2}${endpoints.login}`, {
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams({ username, password }).toString(),
    });

    if (!response.ok()) {
      throw new Error(`Failed to login with status code ${response.status()}`);
    }

    const responseBody = await response.json();
    console.log("Login successful", responseBody);
    this.accessToken = responseBody.access_token;
    this.apiContext = await this.createApiContext();
  }
}
