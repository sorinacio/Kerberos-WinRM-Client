import { request } from "@playwright/test";
import { endpoints, baseURL_C2 } from "../config/endpoints";

export class C2Services {
  private accessToken: string;

  constructor(username: string, password: string) {
    this.login(username, password);
  }

  private async login(username: string, password: string) {
    const response = await request.post(`${baseURL_C2}${endpoints.login}`, {
      form: { username, password },
    });

    if (!response.ok()) {
      throw new Error(`Failed to login with status code ${response.status()}`);
    }

    const responseBody = await response.json();
    console.log("Login successful", responseBody);
    this.accessToken = responseBody.access_token;
  }

  private async requestAPI(method: string, endpoint: string, data?: object) {
    const headers = {
      Authorization: `Bearer ${this.accessToken}`,
      "Content-Type": "application/json",
    };

    const options: any = { headers, method };
    if (data) options.body = JSON.stringify(data);

    const response = await request.fetch(`${baseURL_C2}${endpoint}`, options);

    if (!response.ok()) {
      console.error(`API Request Failed: ${method} ${endpoint} - Status: ${response.status()}`);
      console.error(`Response: ${await response.text()}`);
      return null;
    }

    return await response.json();
  }

  async checkConnectionStatus() {
    return await this.requestAPI("GET", endpoints.connectionStatus);
  }

  async getZones() {
    return await this.requestAPI("GET", endpoints.zones);
  }

  async fetchEventTaskType() {
    const data = await this.requestAPI("GET", endpoints.eventTaskType);
    if (data) {
      console.log("Event Task Types:", data);
    }
    return data;
  }
}
